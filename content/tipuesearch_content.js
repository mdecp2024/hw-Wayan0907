var tipuesearch = {"pages": [{'title': '關於', 'text': '國立虎尾科技大學機械設計工程系 \n 國立台灣大學 \n 機械設計工程系 \n cp2024 電腦程式 \n 課程教材： \n 使用 Jupyter 學習 Python （ 網站 、 電子書 ） \n 教育版帳號 microsoftonline 登錄點:\xa0  https://login.microsoftonline.com/ \n 團隊線上教學： \n 以「學號@nfu.edu.tw」登入 https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼： ldodwua \n 個人實體： https://github.com/mdecp2024/hw-Wayan0907 \n 個人網站： https://mdecp2024.github.io/hw-Wayan0907 \n 參考 \n 其他資訊： \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z', 'tags': '', 'url': '關於.html'}, {'title': '出席率', 'text': '出席人數 (10%) - 自行舉證評分 \n 自行利用 Github 提交提交記錄評分。 \n', 'tags': '', 'url': '出席率.html'}, {'title': '硬體1', 'text': '主題：基於瀏覽器的分散式版本次管理與整合方案開發環境（10%） \n USB隨身碟： \n 下載 python_2025_lite.7z  (428 MB, 解開壓縮後約1.5 GB) \n 朱皮特 \n 什麼是 Github 和 Codespace？ \n 你好世界 - GitHub 文檔 \n 利用包含學號的字串作為帳號，申請免費使用Github。 \n Python 課程教材： https://www.learnpythonwithjupyter.com/  - PART 1 \n \n 第 1 部分：建立基礎知識資料整理 (10%) \n 啟動可攜程序系統後，在命令列中: \n y:\\>cd 筆記本 \n y:\\notebook>jupyter lab --collaborative \n 進入 01_string_input_print.ipynb 練習如何修改PART1筆記本後存檔，上傳至作業文檔中的下載目錄後，穿過 https://nbviewer.org/ 將已經提交的 01_string_input_print.ipynb ，嵌入以下網頁中。 \n \n 上列 iframe 標註的 html 語法： \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後，滿足HW1自評分數輸入cp2024自評表單中。 \n', 'tags': '', 'url': '硬體1.html'}, {'title': '硬體 1 考試', 'text': '每六人為一組進行良好的程序練習 \n 透過Jupyterlab良好的網頁，輪流指定各組編寫的主題1相關的程式練習，以及網頁內容（localhost與Codespaces環境）編輯。 \n', 'tags': '', 'url': '硬體 1 考試.html'}, {'title': 'w9', 'text': '\n', 'tags': '', 'url': 'w9.html'}, {'title': '硬質合金2', 'text': '主題：Python的數列、判斷式與重複迴圈 (20%) \n Python 課程教材： https://www.learnpythonwithjupyter.com/  - PART 2 與 Part 3 \n \n 馬尼拉HW 1網頁資料整理與程序練習方法，整理以下（20%）： \n 第 2 部分：列表和 if/else 語句簡介 \n 第 3 部分：for 迴圈簡介 \n 完成上述流程整理後，滿足HW2自評分數輸入cp2024自評表單中。', 'tags': '', 'url': '硬質合金2.html'}, {'title': '硬體 2 考試', 'text': '每六人為一組進行良好的程序練習 \n 透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 2 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯。 \n', 'tags': '', 'url': '硬體 2 考試.html'}, {'title': '硬質合金3', 'text': '主題：Python 的數字、算法與迴圈 (20%) \n Python 課程教材： https:  //www.learnpythonwithjupyter.com/  - PART 4 與 Part 5 \n 完成上述流程整理後，滿足HW3自評分數輸入cp2024自評表單中。 \n', 'tags': '', 'url': '硬質合金3.html'}, {'title': '硬體 3 考試', 'text': '每六人為一組進行良好的程序練習 \n 透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 3 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯。 \n w7 \n \n', 'tags': '', 'url': '硬體 3 考試.html'}, {'title': 'w7', 'text': 'def print_pyramid(高度): \n    對於範圍（高度）內的 i： \n        # 計算空格和星號的數量 \n        空格 = \' \' * (高度 - i - 1) \n        星星 = \'*\' * (2 * i + 1) \n        列印（空格+星號） \n \n#設定金字塔的高度 \n金字塔高度 = 6 \nprint_pyramid（金字塔高度） \n >pythonw -u "help_range.py"  \xa0 \xa0 \xa0 \xa0 \xa0 *  \xa0 \xa0 \xa0 \xa0 ***  \xa0 \xa0 \xa0 *****  \xa0 \xa0 *******  \xa0 *********  ***********  >退出代碼: 0 \n w8 \n \n 從 coppeliasim_zmqremoteapi_client 導入 RemoteAPIClient \n導入時間 \n進口鍵盤 \n \n#利用zmqRemoteAPI以23000對場景伺服器進行連線 \n客戶端 = RemoteAPIClient(\'[::1]\', 23000) \n# 以 getObject 方法取得場景對象 \nsim = client.getObject(\'sim\') \nbox = sim.getObject(\'/box\') \n \n# 啟動模擬 \nsim.startSimulation() \n \n# 設定立方體的尺寸和初始位置 \n立方體大小 = 0.2 # 20 厘米 \n開始_x = 0 \n起始y = 0 \n間距 = 0.5 # 50 cm 之間的距離（可依需求調整） \n \n# 收納立方體的行數和每行的數量 \nrows = 5 # 從第 1 行到第 5 行 \ncubes_in_row = [1, 3, 5, 7, 9] # 每行立方體的數量 \n \n# 在每一行存放立方體 \n對於範圍內的行（行）： \n    # 計算每行的起始x位置，使其最便宜 \n    start_row_x = start_x - (cubes_in_row[行] - 1) * 間距 / 2 \n     \n    對於範圍內的列（cubes_in_row[row]）： \n        # 計算每個立方體的位置 \n        x_position = start_row_x + col * 間距 \n        y_position = start_y + 行 * 間距 \n         \n        # 建立立方體 \n        cube_handle = sim.createPrimitiveShape(sim.primitiveshape_cuboid, [cube_size,cube_size,cube_size], 0) \n        sim.setObjectPosition(cube_handle, -1, [x_position, y_position,cube_size / 2]) # z 方向上升到立方體的中心 \n \n# 完成正方體的收納盒 \nprint("立方體已成功出貨！") \n \n#設定主迴圈 \n而真實： \n    # 在這裡可以進行其他模擬操作 \n    time.sleep(0.1) #確保迴圈不會太快 \n \n    如果鍵盤.is_pressed(\'q\'): \n        # 可以按q鍵跳出重複執行迴圈 \n        休息 \n \n# 終止模擬 \nsim.stopSimulation() \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8-1', 'text': '從 coppeliasim_zmqremoteapi_client 導入 RemoteAPIClient \n導入時間 \n進口鍵盤 \n \n#利用zmqRemoteAPI以23000對場景伺服器進行連線 \n客戶端 = RemoteAPIClient(\'[::1]\', 23000) \n# 以 getObject 方法取得場景對象 \nsim = client.getObject(\'sim\') \nbox = sim.getObject(\'/box\') \n \n# 啟動模擬 \nsim.startSimulation() \n \n# 設定立方體的尺寸和初始位置 \n立方體大小 = 0.2 # 20 厘米 \n開始_x = 0 \n起始y = 0 \n間距 = 0.5 # 50 cm 之間的距離（可依需求調整） \n \n# 收納立方體的行數和每行的數量 \nrows = 5 # 從第 1 行到第 5 行 \ncubes_in_row = [1, 3, 5, 7, 9] # 每行立方體的數量 \n \n# 在每一行存放立方體 \n對於範圍內的行（行）： \n    # 計算每行的起始x位置，使其最便宜 \n    start_row_x = start_x - (cubes_in_row[行] - 1) * 間距 / 2 \n     \n    對於範圍內的列（cubes_in_row[row]）： \n        # 計算每個立方體的位置 \n        x_position = start_row_x + col * 間距 \n        y_position = start_y + 行 * 間距 \n         \n        # 建立立方體 \n        cube_handle = sim.createPrimitiveShape(sim.primitiveshape_cuboid, [cube_size,cube_size,cube_size], 0) \n        sim.setObjectPosition(cube_handle, -1, [x_position, y_position,cube_size / 2]) # z 方向上升到立方體的中心 \n \n# 完成正方體的收納盒 \nprint("立方體已成功出貨！") \n \n#設定主迴圈 \n而真實： \n    # 在這裡可以進行其他模擬操作 \n    time.sleep(0.1) #確保迴圈不會太快 \n \n    如果鍵盤.is_pressed(\'q\'): \n        # 可以按q鍵跳出重複執行迴圈 \n        休息 \n \n# 終止模擬 \nsim.stopSimulation() \n \n \n', 'tags': '', 'url': 'w8-1.html'}, {'title': '硬質合金4', 'text': '主題：利用Python控制機電模擬系統（20%） \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用 CoppeliaSim 建立機電模擬系統 \n 利用 Python 跨網路控制瀏覽器上的機電類比系統 \n 範例： \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後，滿足HW4自評分數輸入cp2024自評表單中。 \n', 'tags': '', 'url': '硬質合金4.html'}, {'title': 'w8-2', 'text': '', 'tags': '', 'url': 'w8-2.html'}, {'title': '硬體 4 考試', 'text': '每六人為一組進行良好的程序練習 \n 透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 4 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯。 \n', 'tags': '', 'url': '硬體 4 考試.html'}, {'title': '最終報告', 'text': '期末口腔與書面專題報告 (20%) \n 期末口腔專題報告影片： \n ..... \n 期末書面專題報告檔案（pdf）： \n ..... \n 電腦輔助設計與實習課程總結心得： \n ..... \n 期末自報告評成績： \n 完成上述流程後，接受最終報告自評分數輸入cp2024自評表單中。 \n', 'tags': '', 'url': '最終報告.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};